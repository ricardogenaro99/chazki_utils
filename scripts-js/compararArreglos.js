const result = [];

const arrMenor = [
	"149076366087",
	"149077691528",
	"149078153177",
	"149078137515",
	"149077811629",
	"149078109294",
	"149077695412",
	"149076860767",
	"149077674676",
	"149078463195",
	"149076625609",
	"149076586601",
	"149077088382",
	"149077905616",
	"149076464059",
	"149078090217",
	"149077432194",
	"14907795712001",
	"149077118195",
	"149077357435",
	"149078161649",
	"149077006886",
	"149078412266",
	"149076592887",
	"149076679625",
	"149077895548",
	"149078294646",
	"149077573365",
	"149077596837",
	"149078463194",
	"149078830895",
	"149077758083",
	"149077503647",
	"149078139691",
	"149076506789",
	"149078087276",
	"149077577228",
	"149077355303",
	"149076382426",
	"149078376713",
	"149078161650",
	"149077291078",
	"149077652144",
	"149078188329",
	"149078031515",
	"149078680200",
	"14907710712702",
	"149077535478",
	"149069477291",
	"149078269846",
	"149077366104",
	"149078149662",
	"149077854370",
	"149078938378",
	"149078002203",
];

const arrMayor = [
	"149077006886",
	"149076586601",
	"149076464059",
	"149078109294",
	"149077695412",
	"149077674676",
	"149078269846",
	"149077291078",
	"149077895548",
	"149078830895",
	"149077573365",
	"149078161650",
	"149076382426",
	"149077357435",
	"149078188329",
	"14907795712001",
	"149077366104",
	"149078463195",
	"149076679625",
	"149076506789",
	"149077535478",
	"149078090217",
	"149077088382",
	"149078938378",
	"149077118195",
	"149078463194",
	"149077691528",
	"149077758083",
	"149078031515",
	"149077355303",
	"149078139691",
	"149078294646",
	"149077503647",
	"149077854370",
	"149077577228",
	"149078002203",
	"149076625609",
	"149077905616",
	"14907710712702",
	"149078161649",
	"149076860767",
	"149078137515",
	"149078412266",
	"149076592887",
	"149078153177",
	"149077811629",
	"149077596837",
	"149076366087",
	"149077652144",
	"149078680200",
	"149078376713",
	"149077432194",
	"149078149662",
	"149078087276",
	"149077672942",
	"149076883586",
	"149076433179",
	"140001341465",
	"149077051880",
	"149077244962",
	"149069477291",
];

arrMayor.forEach((e) => {
	if (!arrMenor.includes(e)) {
		result.push(e);
	}
});

const getSize = (arr) => {
	return {
		arraySize: arr.length,
		debuggedSize: [...new Set(arr)].length,
	};
};

const response = {
	arrMenorSize: getSize(arrMenor),
	arrMayorSize: getSize(arrMayor),
	result,
};

console.log(JSON.stringify(response, null, 2));
